<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.airlift</groupId>
        <artifactId>airbase</artifactId>
        <version>109</version>
    </parent>

    <groupId>ndb</groupId>
    <artifactId>ndb-root</artifactId>
    <version>5.1.0</version>

    <name>ndb-root</name>
    <description>NDB</description>
    <packaging>pom</packaging>
<!--    <url>https://trino.io</url>-->

<!--    <inceptionYear>2012</inceptionYear>-->

<!--    <licenses>-->
<!--        <license>-->
<!--            <name>Apache License 2.0</name>-->
<!--            <url>http://www.apache.org/licenses/LICENSE-2.0</url>-->
<!--            <distribution>repo</distribution>-->
<!--        </license>-->
<!--    </licenses>-->

<!--    <scm>-->
<!--        <connection>scm:git:git://github.com/trinodb/trino.git</connection>-->
<!--        <url>https://github.com/trinodb/trino</url>-->
<!--        <tag>375</tag>-->
<!--    </scm>-->

    <properties>
        <air.check.skip-spotbugs>true</air.check.skip-spotbugs>
        <air.check.skip-pmd>true</air.check.skip-pmd>
        <air.check.skip-jacoco>true</air.check.skip-jacoco>
        <air.main.basedir>${project.basedir}</air.main.basedir>
        <air.check.skip-spotbugs>true</air.check.skip-spotbugs>
        <air.check.skip-jacoco>true</air.check.skip-jacoco>
        <air.modernizer.java-version>8</air.modernizer.java-version>
        <dep.aws-sdk.version>1.12.172</dep.aws-sdk.version>
        <dep.errorprone.version>2.11.0</dep.errorprone.version>
        <dep.jackson.version>2.15.1</dep.jackson.version>
        <dep.testng.version>6.10</dep.testng.version>
        <dep.arrow.version>13.0.0</dep.arrow.version>
    </properties>

    <modules>
        <module>plugin/ndb-common</module>
        <module>plugin/spark3</module>
        <module>plugin/trino-vast</module>
    </modules>

    <repositories>
        <repository>
            <id>local-repo</id>
            <name>Local Repository</name>
            <url>file://${user.home}/.m2/repository</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>local-repo</id>
            <name>Local Repository</name>
            <url>file://${user.home}/.m2/repository</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <!-- 3rd party -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-core</artifactId>
                <version>${dep.aws-sdk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>joda-time</groupId>
                        <artifactId>joda-time</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${dep.aws-sdk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>joda-time</groupId>
                        <artifactId>joda-time</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${dep.errorprone.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <!-- TODO remove once we upgrade to airbase with https://github.com/airlift/airbase/pull/298 -->
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-annotations</artifactId>
                <version>2.3.0</version>
            </dependency>
            <!-- force newer version to be used for dependencies -->
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.22.0-GA</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>19.0.0</version>
            </dependency>


            <dependency>
                <groupId>org.sonatype.aether</groupId>
                <artifactId>aether-api</artifactId>
                <version>1.13.1</version>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>1.1.8.4</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Transitive dependency. Avoid different versions being used -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.26</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>4.2</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>${dep.antlr.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>antlr4</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <visitor>true</visitor>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.2.4</version>
                </plugin>

                <plugin>
                    <groupId>org.skife.maven</groupId>
                    <artifactId>really-executable-jar-maven-plugin</artifactId>
                    <version>1.0.5</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                </plugin>

                <plugin>
                    <groupId>io.airlift.drift</groupId>
                    <artifactId>drift-maven-plugin</artifactId>
                    <version>${dep.drift.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <configuration>
                        <violationsFiles>
                            <violationsFile>${air.main.basedir}/.mvn/modernizer/violations.xml</violationsFile>
                        </violationsFiles>
                        <exclusionPatterns>
                            <exclusionPattern>org/joda/time/.*</exclusionPattern>
                        </exclusionPatterns>
                        <exclusions>
                            <!-- getOnlyElement is more readable than the stream analogue -->
                            <exclusion>com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;</exclusion>
                            <!-- getLast has lower complexity for array based lists than the stream analogue (O(1) vs O(log(N)) -->
                            <exclusion>com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;)Ljava/lang/Object;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;</exclusion>
                            <!-- TODO: requires getting to common understanding which of those we want to enable -->
                            <exclusion>com/google/common/collect/Iterables.transform:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Lists.transform:(Ljava/util/List;Lcom/google/common/base/Function;)Ljava/util/List;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.isEmpty:(Ljava/lang/Iterable;)Z</exclusion>
                            <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.all:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Z</exclusion>
                            <exclusion>com/google/common/collect/Iterables.any:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Z</exclusion>
                            <exclusion>com/google/common/collect/Iterables.skip:(Ljava/lang/Iterable;I)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.limit:(Ljava/lang/Iterable;I)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.get:(Ljava/lang/Iterable;I)Ljava/lang/Object;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.getFirst:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;)Ljava/lang/Object;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.cycle:(Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.cycle:([Ljava/lang/Object;)Ljava/lang/Iterable;</exclusion>
                            <exclusion>com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;</exclusion>
                        </exclusions>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                        <rules>
                            <compound implementation="com.github.ferstl.maven.pomenforcers.CompoundPedanticEnforcer">
                                <enforcers>POM_SECTION_ORDER,MODULE_ORDER,DEPENDENCY_MANAGEMENT_ORDER,DEPENDENCY_ORDER,DEPENDENCY_ELEMENT</enforcers>
                                <pomSectionPriorities>modelVersion,parent,groupId,artifactId,version,name,description,packaging,url,inceptionYear,licenses,scm,properties,modules</pomSectionPriorities>
                                <dependenciesGroupIdPriorities>io.trino,io.airlift</dependenciesGroupIdPriorities>
                                <dependenciesOrderBy>scope,groupId,artifactId</dependenciesOrderBy>
                                <dependenciesScopePriorities>compile,runtime,provided,test</dependenciesScopePriorities>
                                <dependencyManagementOrderBy>groupId,artifactId</dependencyManagementOrderBy>
                                <dependencyManagementGroupIdPriorities>io.trino,io.airlift</dependencyManagementGroupIdPriorities>
                                <dependencyElementOrdering>groupId,artifactId,type,version</dependencyElementOrdering>
                            </compound>
                            <requireUpperBoundDeps>
                                <excludes combine.children="append">
                                    <!-- TODO: fix this in Airlift resolver -->
                                    <exclude>org.codehaus.plexus:plexus-utils</exclude>
                                    <exclude>com.google.guava:guava</exclude>
                                    <exclude>com.google.protobuf:protobuf-java</exclude>
                                    <exclude>com.fasterxml.jackson.core:jackson-core</exclude>
                                    <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                                    <exclude>com.google.j2objc:j2objc-annotations</exclude>
                                    <exclude>org.slf4j:log4j-over-slf4j</exclude>
                                    <exclude>org.slf4j:jcl-over-slf4j</exclude>
                                    <exclude>org.slf4j:jul-to-slf4j</exclude>
                                    <exclude>org.slf4j:slf4j-jdk14</exclude>
                                    <exclude>org.slf4j:slf4j-api</exclude>
                                    <exclude>ch.qos.logback:logback-core</exclude>
                                    <exclude>io.airlift:units</exclude>
                                    <exclude>io.airlift:slice</exclude>
                                    <exclude>io.airlift:discovery</exclude>
                                    <exclude>io.airlift:event</exclude>
                                    <exclude>javax.xml.bind:jaxb-api</exclude>
                                    <exclude>javax.ws.rs:javax.ws.rs-api</exclude>
                                    <exclude>net.java.dev.jna:jna-platform</exclude>
                                    <exclude>net.java.dev.jna:jna</exclude>
                                    <exclude>io.airlift:log-manager</exclude>
                                    <exclude>org.eclipse.jetty:jetty-util</exclude>
                                    <exclude>io.netty:netty-buffer</exclude>
                                    <exclude>io.netty:netty-common</exclude>
                                    <exclude>org.osgi:org.osgi.core</exclude>
                                    <exclude>org.apache.hadoop:hadoop-common</exclude>
                                    <exclude>org.apache.hadoop:hadoop-auth</exclude>
                                    <exclude>org.apache.yetus:audience-annotations</exclude>
                                    <exclude>org.eclipse.jetty:jetty-server</exclude>
                                    <exclude>org.javassist:javassist</exclude>
                                    <exclude>com.google.code.gson:gson</exclude>
                                    <exclude>org.apache.curator:curator-client</exclude>
                                    <exclude>org.apache.hadoop:hadoop-client</exclude>
                                    <exclude>org.apache.parquet:parquet-common</exclude>
                                    <exclude>org.apache.parquet:parquet-format-structures</exclude>
                                    <exclude>org.xerial.snappy:snappy-java</exclude>
<!--                                    <exclude>joda-time:joda-time</exclude>-->
                                    <exclude>net.bytebuddy:byte-buddy</exclude>
                                </excludes>
                            </requireUpperBoundDeps>
                        </rules>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.ferstl</groupId>
                            <artifactId>pedantic-pom-enforcers</artifactId>
                            <version>2.0.0</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>ca.vanzyl.provisio.maven.plugins</groupId>
                    <artifactId>provisio-maven-plugin</artifactId>
                    <version>1.0.18</version>
                </plugin>

                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                        <runOnlyOnce>true</runOnlyOnce>
                        <injectAllReactorProjects>true</injectAllReactorProjects>
                        <offline>true</offline>
                        <!-- A workaround to make build work in a Git worktree, see https://github.com/git-commit-id/git-commit-id-maven-plugin/issues/215 -->
                        <useNativeGit>true</useNativeGit>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>io.trino</groupId>
                <artifactId>trino-maven-plugin</artifactId>
                <version>11</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>ca.vanzyl.provisio.maven.plugins</groupId>
                <artifactId>provisio-maven-plugin</artifactId>
                <version>1.0.18</version>
                <extensions>true</extensions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>errorprone-compiler</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <!--suppress MavenModelInspection -->
                        <configuration combine.self="override">
                            <!-- forking not required due to JVM flags in .mvn/jvm.config -->
                            <!-- see https://errorprone.info/docs/installation#maven -->
                            <compilerArgs>
                                <arg>-XDcompilePolicy=simple</arg>
                                <arg>
                                    -Xplugin:ErrorProne \
                                    -Xep:BadInstanceof:ERROR \
                                    -Xep:BoxedPrimitiveConstructor:ERROR \
                                    -Xep:ClassCanBeStatic:ERROR \
                                    -Xep:CompareToZero:ERROR \
                                    -Xep:DoubleBraceInitialization:ERROR \
                                    -Xep:EqualsGetClass:OFF <!-- we would rather want the opposite check --> \
                                    -Xep:EqualsIncompatibleType:ERROR \
                                    -Xep:FallThrough:ERROR \
                                    -Xep:GuardedBy:OFF <!-- needs some careful inspection --> \
                                    -Xep:ImmutableEnumChecker:OFF <!-- flags enums with List fields even if initialized with ImmutableList, and other false positives --> \
                                    -Xep:ImmutableSetForContains:ERROR \
                                    -Xep:InconsistentCapitalization:ERROR <!-- fields/variables should not differ only in case --> \
                                    -Xep:InconsistentHashCode:ERROR \
                                    -Xep:InjectOnConstructorOfAbstractClass:ERROR \
                                    -Xep:MissingCasesInEnumSwitch:ERROR \
                                    -Xep:MissingOverride:ERROR \
                                    -Xep:MutablePublicArray:ERROR \
                                    -Xep:NullOptional:ERROR \
                                    -Xep:ObjectToString:ERROR \
                                    -Xep:PreferredInterfaceType:OFF <!-- flags List fields even if initialized with ImmutableList --> \
                                    -Xep:StreamResourceLeak:ERROR \
                                    -Xep:UnnecessaryMethodReference:ERROR \
                                    -Xep:UnnecessaryOptionalGet:ERROR \
                                    -Xep:UnusedVariable:ERROR \
                                    -Xep:UseEnumSwitch:ERROR \
                                    -XepExcludedPaths:.*/target/generated-(|test-)sources/.*
                                </arg>
                            </compilerArgs>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>com.google.errorprone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>${dep.errorprone.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
