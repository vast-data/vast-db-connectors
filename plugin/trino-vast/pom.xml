<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.airlift</groupId>
        <artifactId>airbase</artifactId>
        <version>141</version>
    </parent>

    <groupId>ndb</groupId>
    <artifactId>trino-vast</artifactId>
    <version>5.1.0</version>
    <description>Trino - VAST Connector</description>
    <packaging>trino-plugin</packaging>

    <properties>
        <air.modernizer.java-version>17</air.modernizer.java-version>
        <air.main.basedir>${project.basedir}</air.main.basedir>
        <air.release.preparation-goals>clean verify -DskipTests</air.release.preparation-goals>
        <dep.accumulo.version>1.7.4</dep.accumulo.version>
        <dep.accumulo-hadoop.version>2.7.7-1</dep.accumulo-hadoop.version>
        <dep.antlr.version>4.9.3</dep.antlr.version>
        <dep.okhttp.version>3.14.9</dep.okhttp.version>
        <dep.jsonwebtoken.version>0.11.2</dep.jsonwebtoken.version>
        <dep.oracle.version>19.3.0.0</dep.oracle.version>
        <dep.drift.version>1.14</dep.drift.version>
        <dep.scribejava.version>6.9.0</dep.scribejava.version>
        <dep.tempto.version>187</dep.tempto.version>
        <dep.gcs.version>2.0.0</dep.gcs.version>
        <dep.duct-tape.version>1.0.8</dep.duct-tape.version>
        <dep.docker-java.version>3.2.12</dep.docker-java.version>
        <dep.coral.version>2.0.55</dep.coral.version>
        <dep.confluent.version>5.5.2</dep.confluent.version>
        <project.build.targetJdk>17</project.build.targetJdk>
        <air.java.version>1.8.0-202</air.java.version>
        <dep.trino.version>429</dep.trino.version>
        <dep.trino.airlift.version>236</dep.trino.airlift.version>
        <dep.packaging.version>${dep.trino.airlift.version}</dep.packaging.version>
        <dep.arrow.version>13.0.0</dep.arrow.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <dep.docker.images.version>53</dep.docker.images.version>

        <!--
          America/Bahia_Banderas has:
           - offset change since 1970 (offset Jan 1970: -08:00, offset Jan 2018: -06:00)
           - DST (e.g. at 2017-04-02 02:00:00 clocks turned forward 1 hour; 2017-10-29 02:00:00 clocks turned backward 1 hour)
           - has forward offset change on first day of epoch (1970-01-01 00:00:00 clocks turned forward 1 hour)
           - had forward change at midnight (1970-01-01 00:00:00 clocks turned forward 1 hour)
          -->
        <air.test.timezone>America/Bahia_Banderas</air.test.timezone>
        <air.test.parallel>classes</air.test.parallel>
        <air.test.thread-count>2</air.test.thread-count>
        <!-- Be conservative about memory allotment, because tests start background process (e.g. docker containers) -->
        <air.test.jvmsize>3g</air.test.jvmsize>

        <air.javadoc.lint>-missing</air.javadoc.lint>
    </properties>

    <repositories>
        <repository>
            <id>local-repo</id>
            <name>Local Repository</name>
            <url>file://${user.home}/.m2/repository</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>local-repo</id>
            <name>Local Repository</name>
            <url>file://${user.home}/.m2/repository</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-cache</artifactId>
            <version>${dep.trino.version}</version>
        </dependency>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-plugin-toolkit</artifactId>
            <version>${dep.trino.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>configuration</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>http-client</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>json</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>node</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>1.12.172</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.12.172</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.flatbuffers</groupId>
            <artifactId>flatbuffers-java</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>32.0.0-jre</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>7.0.0</version>
        </dependency>
        <dependency>
            <groupId>ndb</groupId>
            <artifactId>ndb-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.14.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-memory-core</artifactId>
            <version>${dep.arrow.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-memory-netty</artifactId>
            <version>${dep.arrow.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-vector</artifactId>
            <version>${dep.arrow.version}</version>
        </dependency>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-spi</artifactId>
            <!-- TODO: Need to have CI that will upload artifacts -->
            <version>429</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${dep.jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
            <version>1.26.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-context</artifactId>
            <version>1.26.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <version>0.17</version>
            <scope>provided</scope>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.openjdk.jol</groupId>-->
<!--            <artifactId>jol-core</artifactId>-->
<!--            <version>0.2</version>-->
<!--            <scope>provided</scope>-->
<!--        </dependency>-->
        <!-- for testing -->
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>testing</artifactId>
            <version>${dep.trino.airlift.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${dep.testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.9.10</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>ca.vanzyl.provisio.maven.plugins</groupId>
                <artifactId>provisio-maven-plugin</artifactId>
                <version>1.0.18</version>
            </plugin>
            <plugin>
                <groupId>io.trino</groupId>
                <artifactId>trino-maven-plugin</artifactId>
                <version>11</version>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>${dep.antlr.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <visitor>true</visitor>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
            </plugin>
            <plugin>
                <groupId>org.skife.maven</groupId>
                <artifactId>really-executable-jar-maven-plugin</artifactId>
                <version>1.0.5</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <fail>false</fail>
                    <rules>
                        <compound implementation="com.github.ferstl.maven.pomenforcers.CompoundPedanticEnforcer">
                            <enforcers>POM_SECTION_ORDER,MODULE_ORDER,DEPENDENCY_MANAGEMENT_ORDER,DEPENDENCY_ORDER,DEPENDENCY_ELEMENT</enforcers>
                            <pomSectionPriorities>modelVersion,parent,groupId,artifactId,version,name,description,packaging,url,inceptionYear,licenses,scm,properties,modules</pomSectionPriorities>
                            <dependenciesGroupIdPriorities>io.trino,io.airlift</dependenciesGroupIdPriorities>
                            <dependenciesOrderBy>scope,groupId,artifactId</dependenciesOrderBy>
                            <dependenciesScopePriorities>compile,runtime,provided,test</dependenciesScopePriorities>
                            <dependencyManagementOrderBy>groupId,artifactId</dependencyManagementOrderBy>
                            <dependencyManagementGroupIdPriorities>io.trino,io.airlift</dependencyManagementGroupIdPriorities>
                            <dependencyElementOrdering>groupId,artifactId,type,version</dependencyElementOrdering>
                        </compound>
                        <requireUpperBoundDeps>
                            <excludes combine.children="append">
                                <!-- TODO: fix this in Airlift resolver -->
                                <exclude>org.codehaus.plexus:plexus-utils</exclude>
                                <exclude>com.google.guava:guava</exclude>
                                <exclude>com.google.protobuf:protobuf-java</exclude>
                                <exclude>com.fasterxml.jackson.core:jackson-core</exclude>
                                <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                                <exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>
                                <exclude>com.google.j2objc:j2objc-annotations</exclude>
                                <exclude>org.slf4j:log4j-over-slf4j</exclude>
                                <exclude>org.slf4j:jcl-over-slf4j</exclude>
                                <exclude>org.slf4j:jul-to-slf4j</exclude>
                                <exclude>org.slf4j:slf4j-jdk14</exclude>
                                <exclude>org.slf4j:slf4j-api</exclude>
                                <exclude>ch.qos.logback:logback-core</exclude>
                                <exclude>io.airlift:units</exclude>
                                <exclude>io.airlift:slice</exclude>
                                <exclude>io.airlift:discovery</exclude>
                                <exclude>io.airlift:event</exclude>
                                <exclude>javax.xml.bind:jaxb-api</exclude>
                                <exclude>javax.ws.rs:javax.ws.rs-api</exclude>
                                <exclude>net.java.dev.jna:jna-platform</exclude>
                                <exclude>net.java.dev.jna:jna</exclude>
                                <exclude>io.airlift:log-manager</exclude>
                                <exclude>org.eclipse.jetty:jetty-util</exclude>
                                <exclude>io.netty:netty-buffer</exclude>
                                <exclude>io.netty:netty-common</exclude>
                                <exclude>org.osgi:org.osgi.core</exclude>
                                <exclude>org.apache.hadoop:hadoop-common</exclude>
                                <exclude>org.apache.hadoop:hadoop-auth</exclude>
                                <exclude>org.apache.yetus:audience-annotations</exclude>
                                <exclude>org.eclipse.jetty:jetty-server</exclude>
                                <exclude>org.javassist:javassist</exclude>
                                <exclude>com.google.code.gson:gson</exclude>
                                <exclude>org.apache.curator:curator-client</exclude>
                                <exclude>org.apache.hadoop:hadoop-client</exclude>
                                <exclude>joda-time:joda-time</exclude>
                                <exclude>net.bytebuddy:byte-buddy</exclude>
                            </excludes>
                        </requireUpperBoundDeps>
                    </rules>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.ferstl</groupId>
                        <artifactId>pedantic-pom-enforcers</artifactId>
                        <version>2.0.0</version>
                    </dependency>
                </dependencies>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>io.airlift.drift</groupId>-->
<!--                <artifactId>drift-maven-plugin</artifactId>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <configuration>
                    <violationsFiles>
                        <violationsFile>${air.main.basedir}/../../.mvn/modernizer/violations.xml</violationsFile>
                    </violationsFiles>
                    <failOnViolations>false</failOnViolations>
                    <exclusionPatterns>
                        <exclusionPattern>org/joda/time/.*</exclusionPattern>
                        <exclusionPattern>javax/inject/.*</exclusionPattern>
                    </exclusionPatterns>
                    <exclusions>
                        <!-- getOnlyElement is more readable than the stream analogue -->
                        <exclusion>com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;</exclusion>
                        <!-- getLast has lower complexity for array based lists than the stream analogue (O(1) vs O(log(N)) -->
                        <exclusion>com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;)Ljava/lang/Object;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;</exclusion>
                        <!-- TODO: requires getting to common understanding which of those we want to enable -->
                        <exclusion>com/google/common/collect/Iterables.transform:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Lists.transform:(Ljava/util/List;Lcom/google/common/base/Function;)Ljava/util/List;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.isEmpty:(Ljava/lang/Iterable;)Z</exclusion>
                        <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.all:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Z</exclusion>
                        <exclusion>com/google/common/collect/Iterables.any:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Z</exclusion>
                        <exclusion>com/google/common/collect/Iterables.skip:(Ljava/lang/Iterable;I)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.limit:(Ljava/lang/Iterable;I)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.get:(Ljava/lang/Iterable;I)Ljava/lang/Object;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.getFirst:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;)Ljava/lang/Object;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.cycle:(Ljava/lang/Iterable;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.cycle:([Ljava/lang/Object;)Ljava/lang/Iterable;</exclusion>
                        <exclusion>com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;</exclusion>
                    </exclusions>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <sourceDirectories>
                        <sourceDirectory>src/main/java/com/vastdata/trino/plugin/vast</sourceDirectory>
                    </sourceDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration combine.self="override">
                    <source>17</source>
                    <target>17</target>
                    <fork>false</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <!-- Tests classes should start with "Test", but we do also want to include tests incorrectly named, with "Test" at the end -->
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <include>**/Benchmark*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*jmhTest*.java</exclude>
                        <exclude>**/*jmhType*.java</exclude>
                    </excludes>
                    <argLine>${argLine}
                        -Dfile.encoding=UTF-8
                        -Xmx3g
                        -Xms3g
                        -XX:+ExitOnOutOfMemoryError
                        -XX:+HeapDumpOnOutOfMemoryError
                        -XX:-OmitStackTraceInFastThrow
                        --add-opens=java.base/java.lang=ALL-UNNAMED
                        --add-opens=java.base/java.nio=ALL-UNNAMED
                        -Djdk.attach.allowAttachSelf
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <usedDependencies>
                        <dependency>org.apache.arrow:arrow-memory-netty</dependency>
                        <dependency>com.amazonaws:aws-java-sdk-core</dependency>
                        <dependency>com.amazonaws:aws-java-sdk-s3</dependency>
<!--                        <dependency>commons-codec:commons-codec</dependency>-->
                    </usedDependencies>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <configuration>
                    <ignoredResourcePatterns>
                        <!-- [org.apache.arrow:arrow-format, org.apache.arrow:arrow-memory-core, org.apache.arrow:arrow-vector] -->
                        <ignoredResourcePattern>git.properties</ignoredResourcePattern>
                        <ignoredResourcePattern>arrow-git.properties</ignoredResourcePattern>
                        <!-- [org.eclipse.jetty.http2:http2-client, org.eclipse.jetty.http2:http2-common, org.eclipse.jetty.http2:http2-hpack, org.eclipse.jetty.http2:http2-http-client-transport, org.eclipse.jetty:jetty-alpn-client, org.eclipse.jetty:jetty-alpn-java-client, org.eclipse.jetty:jetty-client, org.eclipse.jetty:jetty-http, org.eclipse.jetty:jetty-io, org.eclipse.jetty:jetty-util] -->
                        <ignoredResourcePattern>about.html</ignoredResourcePattern>
                    </ignoredResourcePatterns>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- Allow to run goals with an empty local Maven repository -->
            <id>disable-check-spi-dependencies</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.trino</groupId>
                        <artifactId>trino-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-check-spi-dependencies</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
