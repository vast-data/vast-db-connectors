// automatically generated by the FlatBuffers compiler, do not modify

package vast_flatbuf.tabular;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ListProjectionsResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static ListProjectionsResponse getRootAsListProjectionsResponse(ByteBuffer _bb) { return getRootAsListProjectionsResponse(_bb, new ListProjectionsResponse()); }
  public static ListProjectionsResponse getRootAsListProjectionsResponse(ByteBuffer _bb, ListProjectionsResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ListProjectionsResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String bucketName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer bucketNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer bucketNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String schemaName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer schemaNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer schemaNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String tableName() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer tableNameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer tableNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public vast_flatbuf.tabular.ObjectDetails projections(int j) { return projections(new vast_flatbuf.tabular.ObjectDetails(), j); }
  public vast_flatbuf.tabular.ObjectDetails projections(vast_flatbuf.tabular.ObjectDetails obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int projectionsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public vast_flatbuf.tabular.ObjectDetails.Vector projectionsVector() { return projectionsVector(new vast_flatbuf.tabular.ObjectDetails.Vector()); }
  public vast_flatbuf.tabular.ObjectDetails.Vector projectionsVector(vast_flatbuf.tabular.ObjectDetails.Vector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createListProjectionsResponse(FlatBufferBuilder builder,
      int bucket_nameOffset,
      int schema_nameOffset,
      int table_nameOffset,
      int projectionsOffset) {
    builder.startTable(4);
    ListProjectionsResponse.addProjections(builder, projectionsOffset);
    ListProjectionsResponse.addTableName(builder, table_nameOffset);
    ListProjectionsResponse.addSchemaName(builder, schema_nameOffset);
    ListProjectionsResponse.addBucketName(builder, bucket_nameOffset);
    return ListProjectionsResponse.endListProjectionsResponse(builder);
  }

  public static void startListProjectionsResponse(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addBucketName(FlatBufferBuilder builder, int bucketNameOffset) { builder.addOffset(0, bucketNameOffset, 0); }
  public static void addSchemaName(FlatBufferBuilder builder, int schemaNameOffset) { builder.addOffset(1, schemaNameOffset, 0); }
  public static void addTableName(FlatBufferBuilder builder, int tableNameOffset) { builder.addOffset(2, tableNameOffset, 0); }
  public static void addProjections(FlatBufferBuilder builder, int projectionsOffset) { builder.addOffset(3, projectionsOffset, 0); }
  public static int createProjectionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startProjectionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endListProjectionsResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishListProjectionsResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedListProjectionsResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ListProjectionsResponse get(int j) { return get(new ListProjectionsResponse(), j); }
    public ListProjectionsResponse get(ListProjectionsResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

