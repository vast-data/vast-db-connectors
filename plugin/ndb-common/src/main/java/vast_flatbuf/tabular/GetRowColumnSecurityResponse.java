// automatically generated by the FlatBuffers compiler, do not modify

package vast_flatbuf.tabular;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GetRowColumnSecurityResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static GetRowColumnSecurityResponse getRootAsGetRowColumnSecurityResponse(ByteBuffer _bb) { return getRootAsGetRowColumnSecurityResponse(_bb, new GetRowColumnSecurityResponse()); }
  public static GetRowColumnSecurityResponse getRootAsGetRowColumnSecurityResponse(ByteBuffer _bb, GetRowColumnSecurityResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GetRowColumnSecurityResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public vast_flatbuf.tabular.FilterString rowFilter(int j) { return rowFilter(new vast_flatbuf.tabular.FilterString(), j); }
  public vast_flatbuf.tabular.FilterString rowFilter(vast_flatbuf.tabular.FilterString obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int rowFilterLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public vast_flatbuf.tabular.FilterString.Vector rowFilterVector() { return rowFilterVector(new vast_flatbuf.tabular.FilterString.Vector()); }
  public vast_flatbuf.tabular.FilterString.Vector rowFilterVector(vast_flatbuf.tabular.FilterString.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public vast_flatbuf.tabular.ColumnDetails columnMask(int j) { return columnMask(new vast_flatbuf.tabular.ColumnDetails(), j); }
  public vast_flatbuf.tabular.ColumnDetails columnMask(vast_flatbuf.tabular.ColumnDetails obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int columnMaskLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public vast_flatbuf.tabular.ColumnDetails.Vector columnMaskVector() { return columnMaskVector(new vast_flatbuf.tabular.ColumnDetails.Vector()); }
  public vast_flatbuf.tabular.ColumnDetails.Vector columnMaskVector(vast_flatbuf.tabular.ColumnDetails.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public vast_flatbuf.tabular.NameString columnAllow(int j) { return columnAllow(new vast_flatbuf.tabular.NameString(), j); }
  public vast_flatbuf.tabular.NameString columnAllow(vast_flatbuf.tabular.NameString obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int columnAllowLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public vast_flatbuf.tabular.NameString.Vector columnAllowVector() { return columnAllowVector(new vast_flatbuf.tabular.NameString.Vector()); }
  public vast_flatbuf.tabular.NameString.Vector columnAllowVector(vast_flatbuf.tabular.NameString.Vector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public vast_flatbuf.tabular.NameString columnDeny(int j) { return columnDeny(new vast_flatbuf.tabular.NameString(), j); }
  public vast_flatbuf.tabular.NameString columnDeny(vast_flatbuf.tabular.NameString obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int columnDenyLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public vast_flatbuf.tabular.NameString.Vector columnDenyVector() { return columnDenyVector(new vast_flatbuf.tabular.NameString.Vector()); }
  public vast_flatbuf.tabular.NameString.Vector columnDenyVector(vast_flatbuf.tabular.NameString.Vector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createGetRowColumnSecurityResponse(FlatBufferBuilder builder,
      int row_filterOffset,
      int column_maskOffset,
      int column_allowOffset,
      int column_denyOffset) {
    builder.startTable(4);
    GetRowColumnSecurityResponse.addColumnDeny(builder, column_denyOffset);
    GetRowColumnSecurityResponse.addColumnAllow(builder, column_allowOffset);
    GetRowColumnSecurityResponse.addColumnMask(builder, column_maskOffset);
    GetRowColumnSecurityResponse.addRowFilter(builder, row_filterOffset);
    return GetRowColumnSecurityResponse.endGetRowColumnSecurityResponse(builder);
  }

  public static void startGetRowColumnSecurityResponse(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addRowFilter(FlatBufferBuilder builder, int rowFilterOffset) { builder.addOffset(0, rowFilterOffset, 0); }
  public static int createRowFilterVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRowFilterVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addColumnMask(FlatBufferBuilder builder, int columnMaskOffset) { builder.addOffset(1, columnMaskOffset, 0); }
  public static int createColumnMaskVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startColumnMaskVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addColumnAllow(FlatBufferBuilder builder, int columnAllowOffset) { builder.addOffset(2, columnAllowOffset, 0); }
  public static int createColumnAllowVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startColumnAllowVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addColumnDeny(FlatBufferBuilder builder, int columnDenyOffset) { builder.addOffset(3, columnDenyOffset, 0); }
  public static int createColumnDenyVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startColumnDenyVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGetRowColumnSecurityResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishGetRowColumnSecurityResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedGetRowColumnSecurityResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GetRowColumnSecurityResponse get(int j) { return get(new GetRowColumnSecurityResponse(), j); }
    public GetRowColumnSecurityResponse get(GetRowColumnSecurityResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

