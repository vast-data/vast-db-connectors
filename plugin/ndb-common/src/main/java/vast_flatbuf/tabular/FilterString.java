// automatically generated by the FlatBuffers compiler, do not modify

package vast_flatbuf.tabular;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FilterString extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static FilterString getRootAsFilterString(ByteBuffer _bb) { return getRootAsFilterString(_bb, new FilterString()); }
  public static FilterString getRootAsFilterString(ByteBuffer _bb, FilterString obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FilterString __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String filter() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer filterAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer filterInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createFilterString(FlatBufferBuilder builder,
      int filterOffset) {
    builder.startTable(1);
    FilterString.addFilter(builder, filterOffset);
    return FilterString.endFilterString(builder);
  }

  public static void startFilterString(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addFilter(FlatBufferBuilder builder, int filterOffset) { builder.addOffset(0, filterOffset, 0); }
  public static int endFilterString(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FilterString get(int j) { return get(new FilterString(), j); }
    public FilterString get(FilterString obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

