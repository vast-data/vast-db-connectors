// automatically generated by the FlatBuffers compiler, do not modify

package org.apache.arrow.computeir.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class IntervalLiteralDaysMilliseconds extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static IntervalLiteralDaysMilliseconds getRootAsIntervalLiteralDaysMilliseconds(ByteBuffer _bb) { return getRootAsIntervalLiteralDaysMilliseconds(_bb, new IntervalLiteralDaysMilliseconds()); }
  public static IntervalLiteralDaysMilliseconds getRootAsIntervalLiteralDaysMilliseconds(ByteBuffer _bb, IntervalLiteralDaysMilliseconds obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public IntervalLiteralDaysMilliseconds __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int days() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int milliseconds() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createIntervalLiteralDaysMilliseconds(FlatBufferBuilder builder,
      int days,
      int milliseconds) {
    builder.startTable(2);
    IntervalLiteralDaysMilliseconds.addMilliseconds(builder, milliseconds);
    IntervalLiteralDaysMilliseconds.addDays(builder, days);
    return IntervalLiteralDaysMilliseconds.endIntervalLiteralDaysMilliseconds(builder);
  }

  public static void startIntervalLiteralDaysMilliseconds(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addDays(FlatBufferBuilder builder, int days) { builder.addInt(0, days, 0); }
  public static void addMilliseconds(FlatBufferBuilder builder, int milliseconds) { builder.addInt(1, milliseconds, 0); }
  public static int endIntervalLiteralDaysMilliseconds(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public IntervalLiteralDaysMilliseconds get(int j) { return get(new IntervalLiteralDaysMilliseconds(), j); }
    public IntervalLiteralDaysMilliseconds get(IntervalLiteralDaysMilliseconds obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

