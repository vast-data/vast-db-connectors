// automatically generated by the FlatBuffers compiler, do not modify

package org.apache.arrow.computeir.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class UInt64Literal extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static UInt64Literal getRootAsUInt64Literal(ByteBuffer _bb) { return getRootAsUInt64Literal(_bb, new UInt64Literal()); }
  public static UInt64Literal getRootAsUInt64Literal(ByteBuffer _bb, UInt64Literal obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public UInt64Literal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long value() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createUInt64Literal(FlatBufferBuilder builder,
      long value) {
    builder.startTable(1);
    UInt64Literal.addValue(builder, value);
    return UInt64Literal.endUInt64Literal(builder);
  }

  public static void startUInt64Literal(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addValue(FlatBufferBuilder builder, long value) { builder.addLong(0, value, 0L); }
  public static int endUInt64Literal(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public UInt64Literal get(int j) { return get(new UInt64Literal(), j); }
    public UInt64Literal get(UInt64Literal obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

