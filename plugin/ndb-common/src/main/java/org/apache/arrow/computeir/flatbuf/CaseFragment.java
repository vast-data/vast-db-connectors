// automatically generated by the FlatBuffers compiler, do not modify

package org.apache.arrow.computeir.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * A single WHEN x THEN y fragment.
 */
@SuppressWarnings("unused")
public final class CaseFragment extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static CaseFragment getRootAsCaseFragment(ByteBuffer _bb) { return getRootAsCaseFragment(_bb, new CaseFragment()); }
  public static CaseFragment getRootAsCaseFragment(ByteBuffer _bb, CaseFragment obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public CaseFragment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public org.apache.arrow.computeir.flatbuf.Expression match() { return match(new org.apache.arrow.computeir.flatbuf.Expression()); }
  public org.apache.arrow.computeir.flatbuf.Expression match(org.apache.arrow.computeir.flatbuf.Expression obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public org.apache.arrow.computeir.flatbuf.Expression result() { return result(new org.apache.arrow.computeir.flatbuf.Expression()); }
  public org.apache.arrow.computeir.flatbuf.Expression result(org.apache.arrow.computeir.flatbuf.Expression obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createCaseFragment(FlatBufferBuilder builder,
      int matchOffset,
      int resultOffset) {
    builder.startTable(2);
    CaseFragment.addResult(builder, resultOffset);
    CaseFragment.addMatch(builder, matchOffset);
    return CaseFragment.endCaseFragment(builder);
  }

  public static void startCaseFragment(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMatch(FlatBufferBuilder builder, int matchOffset) { builder.addOffset(0, matchOffset, 0); }
  public static void addResult(FlatBufferBuilder builder, int resultOffset) { builder.addOffset(1, resultOffset, 0); }
  public static int endCaseFragment(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // match
    builder.required(o, 6);  // result
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public CaseFragment get(int j) { return get(new CaseFragment(), j); }
    public CaseFragment get(CaseFragment obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

